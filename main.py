import asyncio
import websockets
import sys
from datetime import datetime

# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: —É—Å—Ç–∞–Ω–æ–≤–∏ —á–µ—Ä–µ–∑ `pip install colorama`, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å —Ü–≤–µ—Ç–∞
try:
    from colorama import Fore, Style, init
    init()  # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è colorama (–Ω—É–∂–Ω–æ –¥–ª—è Windows)
    COLORS = True
except ImportError:
    COLORS = False


def get_time():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú:–°–°"""
    return datetime.now().strftime("%H:%M:%S")


async def chat_client():
    uri = "ws://192.168.1.123:8080/ws"
    try:
        async with websockets.connect(uri) as websocket:
            print(f"[{get_time()}] ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ —Å–µ—Ä–≤–µ—Ä—É WebSocket")

            async def send_messages():
                while True:
                    try:
                        prompt = f"[{get_time()}] ‚û§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å: "
                        if COLORS:
                            prompt = Fore.BLUE + prompt + Style.RESET_ALL
                        message = await asyncio.get_event_loop().run_in_executor(None, input, prompt)
                        timestamp = get_time()
                        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º—è –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ
                        await websocket.send(f"[{timestamp}] {message}")
                    except EOFError:
                        break
                    except Exception as e:
                        print(f"[{get_time()}] ‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
                        break

            async def receive_messages():
                while True:
                    try:
                        response = await websocket.recv()
                        timestamp = get_time()
                        msg = f"[{timestamp}] ‚Üê –ü–æ–ª—É—á–µ–Ω–æ: {response}"
                        if COLORS:
                            print(Fore.GREEN + msg + Style.RESET_ALL)
                        else:
                            print(msg)
                    except websockets.ConnectionClosed:
                        print(f"[{get_time()}] ‚ö†Ô∏è –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ —Å–µ—Ä–≤–µ—Ä–æ–º")
                        break
                    except Exception as e:
                        print(f"[{get_time()}] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏—ë–º–∞: {e}")
                        break

            # –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ —Å–ª—É—à–∞–µ–º –≤–≤–æ–¥ –∏ –ø–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
            await asyncio.gather(send_messages(), receive_messages())

    except ConnectionRefusedError:
        print(f"[{get_time()}] ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –£–±–µ–¥–∏—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω.")
    except Exception as e:
        print(f"[{get_time()}] ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")


# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    try:
        asyncio.run(chat_client())
    except KeyboardInterrupt:
        print(f"\n[{get_time()}] üëã –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
        sys.exit(0)